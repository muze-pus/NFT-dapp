{"ast":null,"code":"var _jsxFileName = \"/home/solulab/Desktop/projects/template/NFT-Dapp-Boilerplate/src/components/DummyNFT/DummyNFT.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useContract } from \"../../hooks\";\nimport Color from \"../../contracts/Color.json\";\n\nconst DummyNFT = () => {\n  const [mintedColors, setMintedColors] = useState([]);\n  const [color, setColor] = useState(\"\");\n  const {\n    account\n  } = useWeb3React();\n  const colorContract = useContract(\"0x42F94aEBBD548AF5F62304AeA2d895F300511dB6\", Color.abi, false);\n\n  const onMintClick = () => {\n    colorContract.methods.mint(color).send({\n      from: account\n    }).on(\"transactionHash\", receipt => {\n      console.log({\n        receipt\n      });\n    });\n    setColor(\"\");\n  };\n\n  useEffect(() => {\n    const loadColors = async () => {\n      const totalSupply = await colorContract.methods.totalSupply().call({\n        from: account\n      }); // Load Colors\n\n      for (var i = 1; i <= totalSupply; i++) {\n        const color = await colorContract.methods.colors(i - 1).call();\n        setMintedColors(oldState => [...oldState, color]);\n      }\n    };\n\n    loadColors();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-lg-12 d-flex text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content mr-auto ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Issue Token\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: color,\n    className: \"form-control mb-1\",\n    placeholder: \"e.g. #FFFFFF\",\n    onChange: event => setColor(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    disabled: !color,\n    onClick: onMintClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"MINT\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, mintedColors ? mintedColors.map((color, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"token\",\n      style: {\n        backgroundColor: color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, color));\n  }) : null));\n};\n\nexport default DummyNFT;","map":{"version":3,"sources":["/home/solulab/Desktop/projects/template/NFT-Dapp-Boilerplate/src/components/DummyNFT/DummyNFT.js"],"names":["React","useEffect","useState","Button","useWeb3React","useContract","Color","DummyNFT","mintedColors","setMintedColors","color","setColor","account","colorContract","abi","onMintClick","methods","mint","send","from","on","receipt","console","log","loadColors","totalSupply","call","i","colors","oldState","event","target","value","map","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { useContract } from \"../../hooks\";\nimport Color from \"../../contracts/Color.json\";\n\nconst DummyNFT = () => {\n  const [mintedColors, setMintedColors] = useState([]);\n  const [color, setColor] = useState(\"\");\n\n  const { account } = useWeb3React();\n  const colorContract = useContract(\n    \"0x42F94aEBBD548AF5F62304AeA2d895F300511dB6\",\n    Color.abi,\n    false\n  );\n\n  const onMintClick = () => {\n    colorContract.methods\n      .mint(color)\n      .send({\n        from: account,\n      })\n      .on(\"transactionHash\", (receipt) => {\n        console.log({ receipt });\n      });\n    setColor(\"\");\n  };\n\n  useEffect(() => {\n    const loadColors = async () => {\n      const totalSupply = await colorContract.methods\n        .totalSupply()\n        .call({ from: account });\n\n      // Load Colors\n      for (var i = 1; i <= totalSupply; i++) {\n        const color = await colorContract.methods.colors(i - 1).call();\n        setMintedColors((oldState) => [...oldState, color]);\n      }\n    };\n\n    loadColors();\n  }, []);\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n          <div className=\"content mr-auto ml-auto\">\n            <h1>Issue Token</h1>\n            <input\n              type=\"text\"\n              value={color}\n              className=\"form-control mb-1\"\n              placeholder=\"e.g. #FFFFFF\"\n              onChange={(event) => setColor(event.target.value)}\n            />\n            <Button\n              variant=\"outline-primary\"\n              disabled={!color}\n              onClick={onMintClick}\n            >\n              MINT\n            </Button>\n          </div>\n        </main>\n      </div>\n      <hr />\n      <div className=\"row text-center\">\n        {mintedColors\n          ? mintedColors.map((color, key) => {\n              return (\n                <div key={key} className=\"col-md-3 mb-3\">\n                  <div\n                    className=\"token\"\n                    style={{ backgroundColor: color }}\n                  ></div>\n                  <div>{color}</div>\n                </div>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default DummyNFT;\n"]},"metadata":{},"sourceType":"module"}