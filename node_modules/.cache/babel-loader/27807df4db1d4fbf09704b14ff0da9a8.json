{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"../utils/connectors\";\n\nconst useInactiveListener = (suppress = false) => {\n  const {\n    active,\n    error,\n    activate\n  } = useWeb3React();\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        activate(injected, undefined, true).catch(error => {\n          console.error(\"Failed to activate after chain changed\", error);\n        });\n      };\n\n      const handleAccountsChanged = accounts => {\n        if (accounts.length > 0) {\n          activate(injected, undefined, true).catch(error => {\n            console.error(\"Failed to activate after accounts changed\", error);\n          });\n        }\n      };\n\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n        }\n      };\n    }\n\n    return undefined;\n  }, [active, error, suppress, activate]);\n};\n\nexport default useInactiveListener;","map":{"version":3,"sources":["/home/solulab/Desktop/projects/template/NFT-Dapp-Boilerplate/src/hooks/useInactiveListener.js"],"names":["useEffect","useWeb3React","injected","useInactiveListener","suppress","active","error","activate","ethereum","window","on","handleChainChanged","undefined","catch","console","handleAccountsChanged","accounts","length","removeListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,QAAQ,GAAG,KAAZ,KAAsB;AAChD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA8BN,YAAY,EAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEQ,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAID,QAAQ,IAAIA,QAAQ,CAACE,EAArB,IAA2B,CAACL,MAA5B,IAAsC,CAACC,KAAvC,IAAgD,CAACF,QAArD,EAA+D;AAC7D,YAAMO,kBAAkB,GAAG,MAAM;AAC/BJ,QAAAA,QAAQ,CAACL,QAAD,EAAWU,SAAX,EAAsB,IAAtB,CAAR,CAAoCC,KAApC,CAA2CP,KAAD,IAAW;AACnDQ,UAAAA,OAAO,CAACR,KAAR,CAAc,wCAAd,EAAwDA,KAAxD;AACD,SAFD;AAGD,OAJD;;AAKA,YAAMS,qBAAqB,GAAIC,QAAD,IAAc;AAC1C,YAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACvBV,UAAAA,QAAQ,CAACL,QAAD,EAAWU,SAAX,EAAsB,IAAtB,CAAR,CAAoCC,KAApC,CAA2CP,KAAD,IAAW;AACnDQ,YAAAA,OAAO,CAACR,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;AACD,WAFD;AAGD;AACF,OAND;;AAQAE,MAAAA,QAAQ,CAACE,EAAT,CAAY,cAAZ,EAA4BC,kBAA5B;AACAH,MAAAA,QAAQ,CAACE,EAAT,CAAY,iBAAZ,EAA+BK,qBAA/B;AAEA,aAAO,MAAM;AACX,YAAIP,QAAQ,CAACU,cAAb,EAA6B;AAC3BV,UAAAA,QAAQ,CAACU,cAAT,CAAwB,cAAxB,EAAwCP,kBAAxC;AACAH,UAAAA,QAAQ,CAACU,cAAT,CAAwB,iBAAxB,EAA2CH,qBAA3C;AACD;AACF,OALD;AAMD;;AACD,WAAOH,SAAP;AACD,GA3BQ,EA2BN,CAACP,MAAD,EAASC,KAAT,EAAgBF,QAAhB,EAA0BG,QAA1B,CA3BM,CAAT;AA4BD,CA9BD;;AAgCA,eAAeJ,mBAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { injected } from \"../utils/connectors\";\n\nconst useInactiveListener = (suppress = false) => {\n  const { active, error, activate } = useWeb3React();\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        activate(injected, undefined, true).catch((error) => {\n          console.error(\"Failed to activate after chain changed\", error);\n        });\n      };\n      const handleAccountsChanged = (accounts) => {\n        if (accounts.length > 0) {\n          activate(injected, undefined, true).catch((error) => {\n            console.error(\"Failed to activate after accounts changed\", error);\n          });\n        }\n      };\n\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n        }\n      };\n    }\n    return undefined;\n  }, [active, error, suppress, activate]);\n};\n\nexport default useInactiveListener;\n"]},"metadata":{},"sourceType":"module"}